// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String     @id @default(uuid())
  email String  @unique
  firstName  String?
  lastName String
  passwordHash String
  isVerified Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  stores Store[]
  sessions Session[]
  verificationCode VerificationCode[]
}

model Store {
  id String @id @default(uuid())
  name String
  products Product[]
  owner User @relation(fields: [ownerId], references: [id])
  ownerId String
}

model Product {
  id String @id @default(uuid())
  store Store @relation(fields: [storeId], references: [id])
  storeId String
}

model Session {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId String
  userAgent String
  ipAddress String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiresAt DateTime 
}

model VerificationCode {
  id String @id @default(uuid())
  user User @relation(fields: [userId],references: [id])
  userId String
  type VerificationCodeType @default(EMAIL_VERIFICATION)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiresAt DateTime

  @@unique([userId])
}

enum VerificationCodeType {
  EMAIL_VERIFICATION
  PASSWORD_RESET
}